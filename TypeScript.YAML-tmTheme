# VS theme settings for TypeScript

---
name: TypeScript
uuid: 91489F9C-F403-4CF0-993D-EAAF9149E40E

settings:
- scope: storage.modifier, storage.type, keyword.other, keyword.operator.expression, keyword.operator.new, keyword.generator.asterisk, punctuation.definition.template-expression
  settings: { vsclassificationtype: keyword }
- scope: constant.language, variable.language
  settings: { vsclassificationtype: keyword }
- scope: keyword.control, keyword.operator.expression.delete, keyword.other.using, keyword.other.operator, entity.name.operator
  settings: { vsclassificationtype: keyword - control }
- scope: support.class, support.type, entity.name.type, entity.name.namespace, entity.other.attribute, entity.name.scope-resolution, entity.name.class
  settings: { vsclassificationtype: type }

- scope: string, punctuation.definition.string, constant.character
  settings: { vsclassificationtype: string }
- scope: keyword.control.anchor.regexp, keyword.other.back-reference.regexp, keyword.operator.quantifier.regexp, keyword.operator.or.regexp, keyword.operator.negation.regexp, punctuation.definition.group.regexp, punctuation.definition.group.assertion.regexp, meta.assertion.look-ahead.regexp, meta.assertion.negative-look-ahead.regexp, punctuation.definition.group.capture.regexp, punctuation.definition.character-class.regexp, constant.other.character-class.range.regexp
  settings: { vsclassificationtype: string }

- scope: constant.numeric, meta.delimiter.decimal.period.ts, constant.language.nan.ts, constant.language.infinity.ts
  settings: { vsclassificationtype: number }

- scope: keyword.operator, storage.type.function.arrow.ts
  settings: { vsclassificationtype: operator }

- scope: meta.brace.angle.ts, meta.brace.round.ts, meta.brace.square.ts, punctuation, constant.language.import-export-all.ts, meta.delimiter.object.comma.ts
  settings: { vsclassificationtype: punctuation }

- scope: comment, comment.block.ts, comment.line.double-slash.ts, punctuation.definition.comment.ts
  settings: { vsclassificationtype: comment }
- scope: comment.block.documentation.ts, other.meta.jsdoc, other.description.jsdoc
  settings: { vsclassificationtype: comment }
- scope: entity.name.type.instance.jsdoc
  settings: { vsclassificationtype: identifier }

- scope: entity.name.type.class.ts
  settings: { vsclassificationtype: class name }

- scope: entity.name.type.module.ts
  settings: { vsclassificationtype: module name }

- scope: entity.name.type.enum.ts
  settings: { vsclassificationtype: enum name }

- scope: meta.template.expression.ts, entity.other.inherited-class.ts
  settings: { vsclassificationtype: identifier }
- scope: variable, meta.definition.variable.name, support.variable, entity.name.variable, constant.other.placeholder
  settings: { vsclassificationtype: local name }
- scope: entity.name.function, support.function, support.constant.handlebars, source.powershell variable.other.member, entity.name.operator.custom-literal
  settings: { vsclassificationtype: method name }

- scope: variable.language.arguments.ts, support.type.object
  settings: { vsclassificationtype: identifier }

- scope: entity.name.tag.inline, entity.name.tag.directive
  settings: { vsclassificationtype: HTML Element Name }

- scope: entity.other.attribute-name
  settings: { vsclassificationtype: HTML Attribute Name }

- scope: meta.tag string.quoted, meta.tag string.quoted punctuation.definition.string, meta.tag string.quoted
  settings: { vsclassificationtype: string }

- scope: meta.object-literal.key
  settings: { vsclassificationtype: parameter name }

- scope: constant.character.escape
  settings: { vsclassificationtype: string - escape character }

- scope: entity.name.label
  settings: { vsclassificationtype: label name }
...
